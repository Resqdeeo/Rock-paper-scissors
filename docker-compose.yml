version: "3.8"

services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "5173:80"
    networks:
      - rockpaperscissors_network
    depends_on:
      - webapi


  webapi:
    build:
      context: ./Backend
      dockerfile: RockPaperScissors.WebAPI/Dockerfile
    container_name: RockPaperScissors.WebAPI
    depends_on:
      - db
      - mongo
    environment:
      ConnectionStrings__PostgresConnection: "Host=db;Port=5432;Username=postgres;Password=password;Database=Rpsgame;"
      MongoSettings__ConnectionString: "mongodb://mongo:27017"
      MongoSettings__DatabaseName: "RockPaperScissorsDB"
    ports:
      - "8080:8080"
    networks:
      - rockpaperscissors_network
    volumes:
      - data_protection:/root/.aspnet/DataProtection-Keys
    restart: always


  db:
    image: postgres:latest
    container_name: RockPaperScissors.PostgreSQL
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - rockpaperscissors_network



  mongo:
    image: mongo:latest
    container_name: mongo-db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - rockpaperscissors_network
    

volumes:
  db_data:
  mongo_data:
  data_protection:

networks:
  rockpaperscissors_network:
    driver: bridge